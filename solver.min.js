var PSolver=function(n){function e(n){for(var e,t={},r=n.length-1;r>-1;r--)e=u.getPermutations(n,n.length-r),t=e.reduce(function(n,e){return n[e]||(n[e]=1),n},t);return Object.keys(t)}function t(n){if(n.length<2)return!1;for(var e=0,t=n.length-1;n[e]==n[t];){if(e==t||1==Math.abs(e-t))return!0;e++,t--}return!1}function r(n){for(var e=[],r=0;r<n.length;r++)n.length<3||t(n[r])&&(e[n[r]]||(e[n[r]]=1));return e}function o(n,t){debug&&console.time("palindromes run time");var o=r(e(n));process.nextTick(function(){t({type:"palindromes",result:Object.keys(o)})}),debug&&console.timeEnd("palindromes run time")}function i(n,t){debug&&console.time("combinations run time"),process.nextTick(function(){t({type:"combinations",result:e(n)})}),debug&&console.timeEnd("combinations run time")}n=n||{},debug=n.debug||!1;var u=function(){function n(t,r,o,i,u){if(i==u){var c=r.join("");return void e.push(c)}u++;for(var s=0;s<t.length;s++)o[s]!==!0&&(o[s]=!0,r.push(t[s]),n(t,r,o,i,u),o[s]=!1,r.pop())}var e=[];return{getPermutations:function(t,r){e=[];var o=t.split(""),i=[],u=new Array(o.length);return n(o,i,u,r,0),e}}}();return{palindromes:o,combinations:i}};module.exports=PSolver;
